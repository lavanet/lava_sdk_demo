[{"/home/aleksaopacic/Documents/Projects/lava-sdk-demo/src/index.tsx":"1","/home/aleksaopacic/Documents/Projects/lava-sdk-demo/src/header/Header.tsx":"2","/home/aleksaopacic/Documents/Projects/lava-sdk-demo/src/terminal/Terminal.tsx":"3","/home/aleksaopacic/Documents/Projects/lava-sdk-demo/src/form/Form.jsx":"4","/home/aleksaopacic/Documents/Projects/lava-sdk-demo/src/config.ts":"5","/home/aleksaopacic/Documents/Projects/lava-sdk-demo/src/code/Code.tsx":"6","/home/aleksaopacic/Documents/Projects/lava-sdk-demo/src/app/App.jsx":"7"},{"size":299,"mtime":1677585766949,"results":"8","hashOfConfig":"9"},{"size":223,"mtime":1672155853967,"results":"10","hashOfConfig":"9"},{"size":904,"mtime":1672158839191,"results":"11","hashOfConfig":"9"},{"size":3243,"mtime":1671533688439,"results":"12","hashOfConfig":"9"},{"size":759,"mtime":1669551094136,"results":"13","hashOfConfig":"9"},{"size":846,"mtime":1672158782521,"results":"14","hashOfConfig":"9"},{"size":2826,"mtime":1677586172143,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"191ujql",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/home/aleksaopacic/Documents/Projects/lava-sdk-demo/src/index.tsx",[],"/home/aleksaopacic/Documents/Projects/lava-sdk-demo/src/header/Header.tsx",[],"/home/aleksaopacic/Documents/Projects/lava-sdk-demo/src/terminal/Terminal.tsx",[],"/home/aleksaopacic/Documents/Projects/lava-sdk-demo/src/form/Form.jsx",[],"/home/aleksaopacic/Documents/Projects/lava-sdk-demo/src/config.ts",["32"],"const {\n    REACT_APP_LAVA_ENDPOINT,\n    REACT_APP_CHAIN_ID,\n    REACT_APP_RPC_INTERFACE,\n    REACT_APP_PRIVATE_KEY,\n  } = process.env;\n  \n  if (!REACT_APP_LAVA_ENDPOINT) {\n    throw Error('REACT_APP_LAVA_ENDPOINT property not found in .env');\n  }\n  \n  if (!REACT_APP_CHAIN_ID) {\n    throw Error('REACT_APP_CHAIN_ID property not found in .env');\n  }\n  \n  if (!REACT_APP_RPC_INTERFACE) {\n    throw Error('REACT_APP_RPC_INTERFACE property not found in .env');\n  }\n  \n  if (!REACT_APP_PRIVATE_KEY) {\n    throw Error('REACT_APP_PRIVATE_KEY property not found in .env');\n  }\n\n  export default {\n    LAVA_ENDPOINT: REACT_APP_LAVA_ENDPOINT,\n    CHAIN_ID: REACT_APP_CHAIN_ID,\n    RPC_INTERFACE: REACT_APP_RPC_INTERFACE,\n    PRIVATE_KEY: REACT_APP_PRIVATE_KEY,\n  };\n  ","/home/aleksaopacic/Documents/Projects/lava-sdk-demo/src/code/Code.tsx",[],"/home/aleksaopacic/Documents/Projects/lava-sdk-demo/src/app/App.jsx",["33"],"// Import from material ui\nimport { Grid } from \"@mui/material\";\nimport { Button } from \"@mui/material\";\n// Import components\nimport Header from \"../header/Header\";\nimport Terminal from \"../terminal/Terminal\";\nimport Code from \"../code/Code\";\nimport Form from \"../form/Form\";\nimport Config from \"../config\";\nimport { LavaEtherProvider } from \"lava-sdk\";\n\n// Import css\nimport \"./App.css\";\n\n// Other imports\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [message, setMessage] = useState([]);\n\n  const [EtherSDK, setEtherSDK] = useState();\n\n  // Init SDK on app start\n  useEffect(() => {\n    const initSDK = async () => {\n      try {\n        const etherSDK = await new LavaEtherProvider({\n          privateKey: Config.PRIVATE_KEY,\n          chainID: Config.CHAIN_ID,\n          pairingListConfig: \"pairingList.json\", // Optional\n        });\n\n        setEtherSDK(etherSDK);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    initSDK().catch(console.error);\n  }, []);\n\n  // Send relays\n  const sendRequest = async () => {\n    // Print request\n    printRequest(\"eth_blockNumber\", []);\n    try {\n      const blockNumber = await EtherSDK.getBlockNumber();\n\n      // Print response\n      printResponse(blockNumber);\n    } catch (err) {\n      console.log(err);\n      setMessage((m) => [\n        ...m,\n        {\n          type: \"Error\",\n          message: err.message,\n        },\n      ]);\n    }\n  };\n\n  const printRequest = (method, param) => {\n    const newRequest =\n      '\"{\"jsonrpc\": \"2.0\", \"id\": 1, \"method\": \"' +\n      method +\n      '\", \"params\": [' +\n      param +\n      \"]}\";\n\n    setMessage((m) => [\n      ...m,\n      {\n        type: \"Request\",\n        message: newRequest,\n      },\n    ]);\n  };\n\n  const printResponse = (response) => {\n    setMessage((m) => [\n      ...m,\n      {\n        type: \"Response\",\n        message: JSON.stringify(response, null, \"\\t\"),\n      },\n    ]);\n  };\n\n  return (\n    <div className=\"App\">\n      <Grid container direction=\"column\" style={{ height: \"100vh\" }}>\n        <Grid style={{ height: \"30%\" }}>\n          <Header />\n        </Grid>\n        <Grid style={{ height: \"10%\", margin: \"0 auto\", paddingTop: \"30px\" }}>\n          <Button\n            variant=\"contained\"\n            color=\"success\"\n            size=\"large\"\n            style={{ marginTop: \"5px\" }}\n            onClick={sendRequest}\n          >\n            Send Request\n          </Button>\n        </Grid>\n        <Grid container style={{ height: \"60%\" }} direction=\"row\">\n          <Grid item xs={1}></Grid>\n          <Grid item xs={5}>\n            <Code message={message} />\n          </Grid>\n          <Grid item xs={5}>\n            <Terminal message={message} />\n          </Grid>\n          <Grid item xs={1}></Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"34","severity":1,"message":"35","line":24,"column":3,"nodeType":"36","endLine":29,"endColumn":5},{"ruleId":"37","severity":1,"message":"38","line":8,"column":8,"nodeType":"39","messageId":"40","endLine":8,"endColumn":12},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar"]